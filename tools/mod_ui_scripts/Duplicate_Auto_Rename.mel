global proc autodupwin(){    if (`windowPref -ex autodupwin`==1) windowPref -r autodupwin;     if(`window -q -ex autodupwin`) deleteUI autodupwin;    window  -w 150 -h 70 -mnb 1 -mb 1 -tlb 1  -tbm 1 -t "Duplicate Auto Rename Script" autodupwin;    columnLayout -adjustableColumn true;        text -bgc 0.1 0.1 0.1  -al "center" -label "Auto Rename Duplicate Mesh";    separator -style "in" ;    text  -al "center" -label "Select Rename Type";    radioButtonGrp   -numberOfRadioButtons 3  -labelArray3 "123..." "abc..." "ABC..."  -sl 2 rnmtyp;    separator -style "in" ;    button -bgc 0.1 0.1 0.1 -label "Auto Rename" -command ("autodup_loop");     text   -al "center" -label "Script By Anonymous";    setParent ..;    showWindow;}global proc autodup_loop(){  int $i;  for($i = 0 ; $i < 100 ; $i++)  {    autodup();  }   print "Duplicate Renaming Done"; }global proc autodup(){    string $upper[] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};    string $lower[] = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m","n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};        int $k=26;    for ($i = 0; $i < 26; $i++)        {           if ($k>=26 && $k<=676)           {               for ($j = 0; $j <26; $j++)               {                    $lower[$k] = $lower[$i] + $lower[$j];                    $k++;               }           }           if ($k>=677 && $k<17576)           {               for ($o = 0; $o < 26; $o++)               {                   for ($j = 0; $j < 26; $j++)                   {                        for ($l = 0; $l < 26; $l++)                        {                                // print  ($k + "b\n");                                            $lower[$k] = $lower[$o] + $lower[$j] + $lower[$l];                             $k++;                       }                   }               }           }        }    $k=26;    for ($i = 0; $i < 26; $i++)        {           if ($k>=26 && $k<=676)           {               for ($j = 0; $j <26; $j++)               {                    $upper[$k] = $upper[$i] + $upper[$j];                    $k++;               }           }           if ($k>=677 && $k<17576)           {               for ($o = 0; $o < 26; $o++)               {                   for ($j = 0; $j < 26; $j++)                   {                        for ($l = 0; $l < 26; $l++)                        {                                // print  ($k + "b\n");                                            $upper[$k] = $upper[$o] + $upper[$j] + $upper[$l];                             $k++;                       }                   }               }           }        }    string $nodes[]=`ls -type mesh`;    if (`radioButtonGrp -q -select rnmtyp` == 1)     {       for ($x=0; $x< size($nodes); $x++)      {        int $count;        int $num_token = 0;        string $buffer[];        $num_token =`tokenize $nodes[$x] "|" $buffer`;        if ($num_token > 1)        {          while ($num_token > 1)          {            string $name =($buffer[size($buffer)-1]);            string $newname;            int $stringSize = size($name);            int $chk = `gmatch $name "*_geo"`;            int $chk1 = `gmatch $name "*_grp"`;            $newname = $name;            if ($chk == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $count) + "_geo");            }            if ($chk1 == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $count) + "_grp");            }                        if ($chk == 0 && $chk1 == 0)            {                rename $nodes[$x] ($newname + ("_" + $count));            }                        print ("renamed " + $name + " to " + $newname + ("_" + $count) + "\n");            $count++;            $nodes =`ls -type transform`;            string $buffer[];            $num_token =`tokenize $nodes[$x] "|" $buffer`;          }        }        $count = 0;      }    }            if (`radioButtonGrp -q -select rnmtyp` == 2)     {       for ($x=0; $x< size($nodes); $x++)      {          int $count;        int $num_token = 0;        string $buffer[];        $num_token =`tokenize $nodes[$x] "|" $buffer`;        if ($num_token > 1)        {          while ($num_token > 1)          {            string $name =($buffer[size($buffer)-1]);            string $newname;            int $stringSize = size($name);            int $chk = `gmatch $name "*_geo"`;            int $chk1 = `gmatch $name "*_grp"`;            $newname = $name;            if ($chk == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $lower[$count] + "_geo"));            }            if ($chk1 == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $lower[$count] + "_grp"));            }            if ($chk == 0 && $chk1 == 0)            {                rename $nodes[$x] ($newname + ("_" + $lower[$count]));            }            print ("renamed " + $name + " to " + $newname  + ("_" + $lower[$count]) + "\n");            $count++;            $nodes =`ls -type transform`;            string $buffer[];            $num_token =`tokenize $nodes[$x] "|" $buffer`;          }        }        $count = 0;      }    }        if (`radioButtonGrp -q -select rnmtyp` == 3)     {       for ($x=0; $x< size($nodes); $x++)      {        int $count;        int $num_token = 0;        string $buffer[];        $num_token =`tokenize $nodes[$x] "|" $buffer`;        if ($num_token > 1)        {          while ($num_token > 1)          {            string $name =($buffer[size($buffer)-1]);            string $newname;            int $stringSize = size($name);            int $chk = `gmatch $name "*_geo"`;            int $chk1 = `gmatch $name "*_grp"`;            $newname = $name;            if ($chk == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $upper[$count] + "_geo"));            }            if ($chk1 == 1)            {                $newname = `substring $name 1 ($stringSize - 4)`;                rename $nodes[$x] ($newname + ("_" + $upper[$count] + "_grp"));            }            if ($chk == 0 && $chk1 == 0)            {                rename $nodes[$x] ($newname + ("_" + $upper[$count]));            }                        print ("renamed " + $name + " to " + $newname  + ("_" + $upper[$count]) + "\n");            $count++;            $nodes =`ls -type transform`;            string $buffer[];            $num_token =`tokenize $nodes[$x] "|" $buffer`;          }        }        $count = 0;      }    }}